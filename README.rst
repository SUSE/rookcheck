rookcheck
=========

`rookcheck` is a testing platform for `rook.io`_. The intention is to provide
developers with a way to simulate various environments and scenarios that may
occur within them.

For example, rookcheck can perform tests such as adding new nodes to your
kubernetes cluster and ensuring that they are correctly enrolled and handled by
rook.io/ceph.

Additionally rookcheck can handle disaster testing such as kernel panics,
physically removed nodes, and so forth.

Because a test may need to interact with the underlying hardware the unit tests
will set up and configure the nodes, distros, kubernetes, and rook itself.
These are then exposed to the test writer to interact with further or to verify
the environment.

`Read the full documentation <https://rookcheck.readthedocs.io/>`_.

Quickstart
----------

Install requirements:

.. code-block:: bash

    sudo zypper in python-pip
    sudo pip install tox
    sudo zypper in $(tox -qq -e bindep -- -b)
    sudo systemctl start docker
    sudo usermod -aG docker $USER

Configure:

.. code-block:: bash

    cp configuration.env .env
    vim .env # Make any changes needed

Run tests:

.. code-block:: bash

    tox -e py38


.. image:: https://readthedocs.org/projects/rookcheck/badge/?version=latest
   :target: https://rookcheck.readthedocs.io/en/latest/?badge=latest
   :alt: Documentation Status


.. _`rook.io`: https://rook.io/


Registry cache
--------------
Local registry cache quick start

1 - Setup the registry cache

Registry cache setup uses ansible code available at https://gitlab.suse.de/ceph/infra/-/merge_requests/8

Determine the list of registry you want to have cached, and set the variable registry_to_mirror accordingly.

Ansible code will:
- setup one registry container for each remote registry to mirror (this is by design of the registry container)
- generate certificates for each registry, with a .local suffix: i.e registry.suse.de will be mirrored ar registry.suse.de.local
- setup a proxy with TLS in front of theses registries
- generate a suitable config file to make your container runtime use them (registries.conf)

2 - Setup rookcheck for local registries

2.1 Each node accessing the local registry cache needs to be configured to do so.
The easy way is to place the generated configuration of step 1 into ROOKCHECK_DIR/localassets/containers/
It will be picked up and deployed automatically by rookcheck.

The hard way is to configure registries.conf manually on each node...

2.2 Registries are accessed using TLS by default.
Consequently you need to deploy certificates to your nodes.
As done for the config, just place certificates generated by ansible into the proper folder: ROOKCHECK_DIR/localassets/certificates
They will be picked up and deployed automatically by rookcheck.
