---
- name: Ensure zypper will auto accept Licences
  lineinfile:
    path: /etc/zypp/zypper.conf
    regexp: '^# autoAgreeWithLicenses = no'
    line: 'autoAgreeWithLicenses = yes'

- name: add repositories
  zypper_repository:
    name: '{{ _repo.key }}'
    repo: '{{ _repo.value }}'
    state: present
    auto_import_keys: yes
  loop: "{{ lookup('dict', caasp_repositories, wantlist=True) }}"
  loop_control:
    loop_var: _repo

- name: Add custom certificates
  synchronize:
    src: "{{ playbook_dir }}/../../../localassets/certificates/"
    dest: /etc/pki/trust/anchors
  notify:
    - update-ca-certificates

- name: add packages
  vars:
    pkg:
      - ca-certificates-suse
  zypper:
      name: '{{ pkg }}'
      state: present
      update_cache: yes

- name: set skuba-update to annotate-only mode
  copy:
    src: skuba-update
    dest: /etc/sysconfig/skuba-update
    owner: root
    group: root
    mode: 0644

- name: install skuba & kubectl
  zypper:
      name:
        - patterns-caasp-Management
      state: present
      update_cache: no
  when: inventory_hostname in groups['first_master']

- name: retrieve skuba binary into workspace
  fetch:
    src: /usr/bin/skuba
    dest: '{{ rookcheck_workspace_dir }}/bin/'
    flat: yes
  when: inventory_hostname in groups['first_master']

- name: retrieve kubectl binary into workspace
  fetch:
    src: /usr/bin/kubectl
    dest: '{{ rookcheck_workspace_dir }}/bin/'
    flat: yes
  when: inventory_hostname in groups['first_master']

- name: make skuba binary executable
  file:
    path: '{{ rookcheck_workspace_dir }}/bin/skuba'
    mode: 0755
  delegate_to: 127.0.0.1
  when: inventory_hostname in groups['first_master']

- name: make kubectl binary executable
  file:
    path: '{{ rookcheck_workspace_dir }}/bin/kubectl'
    mode: 0755
  delegate_to: 127.0.0.1
  when: inventory_hostname in groups['first_master']

- name: remove skuba
  zypper:
      name: skuba
      state: absent
      update_cache: no
  when: inventory_hostname in groups['first_master']

- name: create registries config folder
  file:
    path: /etc/containers
    state: directory
    mode: '0755'

- name: copy custom registries
  synchronize:
    src: "{{ playbook_dir }}/../../../localassets/containers/"
    dest: /etc/containers
