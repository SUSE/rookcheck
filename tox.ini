# Tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.
#
# See also https://tox.readthedocs.io/en/latest/config.html for more
# configuration options.

[tox]
minversion = 3.7
# Choose your Python versions. They have to be available
# on the system the tests are run on.
envlist = lint, py38, lint-docs, docs

# Tell tox to not require a setup.py file
skipsdist = True

[testenv]
deps = -r{toxinidir}/test-requirements.txt
commands =
  py.test -s {posargs}
passenv =
  HOME
  OS_AUTH_URL
  OS_AUTH_VERSION
  OS_EXTERNAL_NETWORK
  OS_INTERNAL_NETWORK
  OS_PASSWORD
  OS_PROJECT_DOMAIN_ID
  OS_PROJECT_NAME
  OS_REGION_NAME
  OS_USERNAME
  OS_USER_DOMAIN_NAME
  ROOKCHECK_*
  SSH_AUTH_SOCK
  USER
  VERIFY_SSL_CERT
  XDG_CACHE_HOME

# Allow pytest enough time to finish cleanup after interrupts
# (requires tox >= 3.15.2)
suicide_timeout=600.0
interrupt_timeout=600.0
terminate_timeout=600.0

[testenv:lint]
# --ignore-missing-imports tells mypy to not try to follow imported modules
# out of the current tree. As you might expect, we don't want to run static
# type checking on the world - just on ourselves.
commands =
  flake8 {posargs}
  mypy --ignore-missing-imports tests
  ansible-lint

[testenv:docs]
deps =
  -r{toxinidir}/doc/requirements.txt
  -r{toxinidir}/test-requirements.txt
commands =
  sphinx-build -W -b html doc/source doc/build/html

[testenv:lint-docs]
deps =
  doc8
  Pygments
  -r{toxinidir}/doc/requirements.txt
  -r{toxinidir}/test-requirements.txt
commands =
  doc8 doc/source/
  sphinx-build -W -b html doc/source doc/build/html

[flake8]
show-source = True
exclude = .venv,.tox,dist,doc,build,*.egg,node_modules

[testenv:bindep]
# Do not install any requirements. We want this to be fast and work even if
# system dependencies are missing, since it's used to tell you what system
# dependencies are missing! This also means that bindep must be installed
# separately, outside of the requirements files.
usedevelop = False
deps = bindep
commands = bindep {posargs}

[testenv:venv]
commands = {posargs}

[pytest]
log_level = INFO
log_format = %(asctime)s %(name)45.45s %(levelname)7s : %(message)s
log_date_format = %H:%M:%S

log_cli = True
log_cli_level = INFO
