#!groovy


def compute_node='storage-rookcheck'
// the prefix we want to use for the rookcheck environment
def cluster_prefix="${currentBuild.fullProjectName.replace('/', '_')}-${currentBuild.number}_"

pipeline {
    agent {
        label "${compute_node}"
    }

    options {
    parallelsAlwaysFailFast()
    }

    parameters {
        /* first value in the list is the default */
        choice(name: 'OS_CLOUD', choices: ['ecp'], description: 'OpenStack Cloud to use')
        string(name: 'OS_EXTERNAL_NETWORK', defaultValue: 'floating', description: 'the OpenStack external network')
        string(name: 'OS_FLAVOR', defaultValue: 'm1.medium', description: 'the OpenStack image flavor')

        choice(name: 'DISTRO', choices: ['all', 'openSUSE_k8s', 'SLES_CaaSP'], description: 'The OS/K8S distro tuple')
    }

    environment {
        // ROOKCHECK_CLUSTER_PREFIX = "${cluster_prefix}"
        // FIXME(jhesketh): ${cluster_prefix} is too long for a node name.
        //                  kubectl annotate fails when the network isn't set
        //                  up and the name is long. This is possibly an
        //                  upstream kubernetes bug that I need to investigate.
        ROOKCHECK_CLUSTER_PREFIX = "rookcheck-jen"
        OS_CLOUD = "${params.OS_CLOUD}"
        ROOKCHECK_OS_EXTERNAL_NETWORK = "${params.OS_EXTERNAL_NETWORK}"
        ROOKCHECK_OS_FLAVOR = "${params.OS_FLAVOR}"
        ROOKCHECK_BUILD_ROOK_FROM_GIT = "FALSE"
    }
    stages {
        stage('Test distros') {
            failFast false
            parallel {
                stage('openSUSE_k8s') {
                    when {
                        anyOf {
                            expression { params.DISTRO == 'all' }
                            expression { params.DISTRO == 'openSUSE_k8s' }
                        }
                    }
                    environment {
                        ROOKCHECK_DISTRO = "openSUSE_k8s"
                        ROOKCHECK_NODE_IMAGE_USER = "opensuse"
                        ROOKCHECK_OS_NODE_IMAGE = "openSUSE-Leap-15.1-JeOS.x86_64-OpenStack-Cloud"
                    }
                    steps{
                        sh "env"
                        sh "tox -epy3 --workdir opensuse_venv tests/test_basic.py"
                    }
                }
                stage('SLES_CaaSP') {
                    when {
                        anyOf {
                            expression { params.DISTRO == 'all' }
                            expression { params.DISTRO == 'SLES_CaaSP' }
                        }
                    }
                    environment {
                        ROOKCHECK_DISTRO = "SLES_CaaSP"
                        ROOKCHECK_NODE_IMAGE_USER = "sles"
                        ROOKCHECK_OS_NODE_IMAGE = "2ed6b226-8a92-4743-9625-5b8db4b0ce83"
                    }
                    steps{
                        sh "env"
                        sh "tox -epy3 --workdir sles_venv  tests/test_basic.py"
                    }
                }
            }
        }
    }
}
